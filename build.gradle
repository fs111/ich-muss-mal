plugins {
    id 'de.undercouch.download' version '5.6.0'
    id 'ru.vyarus.use-python' version '3.0.0'
    id 'application'
    id 'distribution'
    id 'com.diffplug.spotless' version "6.25.0"
}

repositories {
    mavenCentral()
}

spotless {
  java {
    palantirJavaFormat()
  }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    mainClass = 'lol.rox.peepoop.Converter'
}

dependencies {
    implementation group: 'org.apache.poi', name: 'poi', version: '5.2.5'
    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '5.2.5'

    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.23.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.23.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j2-impl', version: '2.23.1'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.13'

    implementation group: 'org.jdbi', name: 'jdbi3-sqlite', version: '3.45.2'
    
    implementation group: 'org.jdbi', name: 'jdbi3-core', version: '3.45.1'

    implementation group: 'org.xerial', name: 'sqlite-jdbc', version: '3.45.3.0'

    implementation group: 'net.sf.jopt-simple', name: 'jopt-simple', version: '5.0.4'

}

python {
    pip 'datasette:1.0a13'
    pip 'datasette-cluster-map:0.18.1'
    pip 'datasette-basemap:0.2'
}

task downloadXLS(type: Download) {
    src 'https://www.berlin.de/sen/uvk/_assets/verkehr/infrastruktur/oeffentliche-toiletten/berliner-toiletten-standorte.xlsx'
    dest new File(buildDir, 'berliner-toiletten.xlsx')
    onlyIfModified true
}

run {
    inputs.file downloadXLS.dest
    outputs.file "$buildDir/toilets.sqlite"

    args = [ "--xls", downloadXLS.dest, "--sqlite", "$buildDir/toilets.sqlite"]
}
run.dependsOn downloadXLS


task serve(type: PythonTask) {
    command = "-m datasette  --metadata metadata.json " + run.outputs.files.getSingleFile()
}
serve.dependsOn pipInstall, run


task dpackage(type: PythonTask) {
    command = "-m datasette  package -t ich-muss-mal --metadata metadata.json " + run.outputs.files.getSingleFile()
}
dpackage.dependsOn pipInstall, run
